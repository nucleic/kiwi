name: Build and upload wheels
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 3'
  push:
    tags:
      - '*'

jobs:
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Build sdist
        run: |
          pip install --upgrade pip
          pip install wheel
          python setup.py sdist
      - name: Test sdist
        run: |
          pip install pytest
          pip install --no-index --find-links dist kiwisolver
          cd ..
          python -m pytest kiwi/py/tests
      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: dist/*

  build_wheels:
    name: Build wheels on ${{ matrix.os }} for Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    env:
      BUILD_COMMIT: main
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: [cp39]
        #, cp38, cp39, cp310, pp37]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel cibuildwheel
      # - name: Set up QEMU
      #   if: runner.os == 'Linux'
      #   uses: docker/setup-qemu-action@v1
      #   with:
      #     platforms: all
      - name: Build wheels
        env:
          CIBW_BUILD: ${{ matrix.python }}-*
          CIBW_ARCHS_MACOS: x86_64 universal2 arm64
          # configure cibuildwheel to build native archs ('auto'), and some
          # emulated ones
          CIBW_ARCHS_LINUX: auto aarch64 ppc64le s390x
          # Move to 2010 or 2014 when matplotlib does
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
          CIBW_MANYLINUX_I686_IMAGE: manylinux1
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: python -m pytest {package}/py/tests -v
          # Do not link against VC2014_1 on Windows
          KIWI_DISABLE_FH4: 1
        run: |
          python -m cibuildwheel --output-dir dist
      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: dist/*.whl

  release_upload:
    name: Create Release and Upload Release Asset
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: [build_wheels, build_sdist]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: ${{ contains(github.ref, 'rc') || contains(github.ref, 'a') || contains(github.ref, 'b')}}
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - name: Upload Release Asset
        id: upload-release-asset
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*

  upload_pypi:
    if: github.event_name == 'push'
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          # To test:
          # repository_url: https://test.pypi.org/legacy/
